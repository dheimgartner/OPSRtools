% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opsr_select.R
\name{opsr_select}
\alias{opsr_select}
\title{Select a Model in a Stepwise Algorithm}
\usage{
opsr_select(
  object,
  pseq = seq(0.9, 0.1, by = -0.1),
  log = new.env(),
  verbose = TRUE,
  loss = c("aic", "bic", "lrt"),
  ...
)
}
\arguments{
\item{object}{an object of class \code{"opsr"}.}

\item{pseq}{sequence of p-value thresholds (each of which is passed as \code{pval}
to \code{\link{opsr_step}}).}

\item{log}{environment to keep track of changes to \code{object} (in particular
variables being eliminated).}

\item{verbose}{if \code{TRUE}, prints working information during computation.}

\item{loss}{The loss function for model comparison. Can be abbreviated.
See 'Details' section for more information.}

\item{...}{additional arguments passed to \code{\link{opsr_select}}}
}
\value{
An object of class \code{"opsr.select"}.
}
\description{
Iteratively calls \code{\link{opsr_step}} and compares the resulting model to the
current winner (as evaluated by a selected loss function).
}
\details{
Currently three loss functions are available which can be selected via the
\code{loss} argument. The loss is then computed for the two models to be compared
and a winner is selected. Can be one of \code{"aic"} for AIC, \code{"bic"} for BIC and
\code{"lrt"} for a likelihood ratio test.
}
\examples{
sim_dat <- OPSR::opsr_simulate()
dat <- sim_dat$data
dat$xo3 <- runif(n = nrow(dat))
dat$xo4 <- factor(sample(c("level1", "leve2", "level3"), nrow(dat), replace = TRUE))
f <- ys | yo ~ xs1 + xs2 + log(xo3) | xo1 + xo2 + xo3 + xo4 | xo1 + xo2 + xo3 | xo1 + xo2
fit <- OPSR::opsr(f, dat, printLevel = 0)
fit_select <- opsr_select(fit, loss = "aic", printLevel = 0)
print(fit_select)
}
\seealso{
\code{\link{opsr_select}}
}
